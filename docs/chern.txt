Профессиональное образовательное учреждение частное 
«Колледж менеджмента»


Специальность_________________________________________________
(полное наименование специальности в соответствии с ФГОС)

КУРСОВАЯ РАБОТА

по __________________________________________________________________
(учебная дисциплина либо междисциплинарный курс)

Тема ________________________________________________________________
____________________________________________________________________


Студента(ки)________________________________________________________
(ФИО в родительном падеже) 
____________________________отделения _________ курса группа _________
(очно-заочное либо заочное)

______________________________20___г.
дата сдачи работы
____________________________________
подпись студента
     Преподаватель 
____________________________________
фамилия, инициалы
____________________________________
подпись преподавателя
______________________________20___г.

     Оценка_____________________________









Архангельск 2025
СОДЕРЖАНИЕ

Введение	3
1 Анализ и разработка требований к обучающей программе «ТЕМА ПРОЕКТА 313»	6
1.1 Назначение и область применения	6
1.2 Постановка задачи	6
1.3 Описание алгоритма функционирования обучающей программы	7
1.4 Обоснование выбора программного обеспечения	7
2 Проектирование и разработка обучающей программы «ТЕМА ПРОЕКТА 313»	9
2.1 Проектирование причинно-следственной диаграммы	9
2.2 Проектирование DFD-диаграмм первого и второго уровня	10
2.3 Проектирование UML-диаграмм стереотипов	12
2.4 Проектирование прототипа обучающей программы «ТЕМА ПРОЕКТА 313»	14
2.5 Создание обучающей программы «ТЕМА ПРОЕКТА 313»	15
3 Спецификация программы	21
4 Тестирование обучающей программы «История и развитие группы 
Stray Kids»	23
5 Руководство пользователя	28
5.1 Общие сведения	28
5.2 Инструкция по работе	28
Заключение	30
Список использованных источников	31

Введение

В наше время информационные технологии активно расширяют свое влияние и интегрируются в различные области жизни, в том числе в образование. В последние годы наблюдается увеличенный интерес к обучающим программам, которые представляют собой специализированное программное обеспечение, применяемое в учебном процессе. 
Обучающие программы имеют ряд преимуществ перед привычными нам бумажными учебниками:
    • интерактивность. Использование образовательных программ делает процесс обучения более интерактивным и увлекательным. Учащийся имеет возможность самостоятельно выбирать темп и порядок изучения материала, а также взаимодействовать с ним в различных формах,
    • доступность. Обучающие программы можно использовать в любое время и в любом месте, что делает их более доступными для обучающихся,
    • индивидуализация. Обучающие программы позволяют индивидуализировать процесс обучения с учетом потребностей и способностей каждого обучающегося,
    • эффективность. Обучающие программы позволяют повысить эффективность обучения за счет использования различных методов и форм обучения, а также обратной связи.
Актуальность работы: в наше время обучающие  программы на различные темы могут быть использованы в широком спектре учебных учреждений, от начальной школы до высших учебных заведений, для обучения разнообразным предметам, включая гуманитарные, естественно-научные, технические и инженерные науки. Кроме того, доступность онлайн образования позволяет студентам из разных регионов и стран получать качественные знания, не выходя из дома. Обучающие программы также способствуют повышению уровня компетенций учащихся и обогащению их знаний в соответствии с современными требованиями рынка труда. 
В настоящее время существует множество обучающих программ, разработанных для различных целей. Однако, как правило, эти программы имеют ряд недостатков, таких как:
    • недостаточная интерактивность. Многие обучающие программы представляют собой лишь статический набор информации, который не позволяет обучаемому взаимодействовать с ним,
    • недоступность. Некоторые обучающие программы являются дорогостоящими и недоступными для большинства обучающихся,
    • недостаточная индивидуализация. Многие обучающие программы не позволяют индивидуализировать процесс обучения с учетом потребностей и способностей каждого обучающегося.
Цель данного курсового проекта заключается в создании обучающей программы, которая помощь учащимся в освоении навыков исследования, анализа и презентации информации. Обучающая программа будет упрощать учебный процесс и в полном объеме доносить информацию до учащихся. Дополнительной целью программы также является предоставить учащимся информацию об истории и развитии южнокорейской группы Stray Kids, их творчестве и влиянии на индустрию развлечений, а также о мировой культуре KPOP. 
Обучающая программа «ТЕМА ПРОЕКТА 313» будет включать в себя следующие компоненты:
    • теоретический материал. Теоретический материал будет представлен в удобном и интересном виде,
    • тестовые задания. Тестовые задания будут использоваться для оценки знаний и навыков обучающегося.
Обучающая программа будет обладать удобным интерфейсом, который понятен и доступен даже пользователям без специальных навыков работы с компьютером. 
Разработка обучающей программы «ТЕМА ПРОЕКТА 313» позволит повысить эффективность информирования о данной теме и сделать это более интересным и увлекательным способом.
Для реализации поставленной цели необходимо решить следующие задачи:
    • выбор темы обучающей программы,
    • проектирование обучающей программы: определение целей, выбор методов обучения, разработка учебного плана и контента,
    • разработка архитектуры программы для ее реализации,
    • написание программного кода обучающей программы, включая интерфейс, функциональные модули, управление данными и т.д,
    • тестирование программы на корректность, производительность и пользовательскую удобство,
    • успешное использование обучающей программы.
1 Анализ и разработка требований к обучающей программе «ТЕМА ПРОЕКТА 313»

1.1 Назначение и область применения

Разрабатываемый программный продукт является обучающей программой «ТЕМА ПРОЕКТА 313». Обучающая программа предназначена для усвоения учебного материала по теме «ТЕМА ПРОЕКТА 313». Разрабатываемая программа представляет собой оконное приложение, позволяющее:
    • просматривать теоретический материал,
    • проходить тесты,
    • просматривать информацию о программе.
Пользователями этого обучающей программы будут являться люди, желающие узнать больше о культуре KPOP и группе Stray Kids .

1.2 Постановка задачи

Разрабатываемое обучающая программа должна предоставлять информацию о южнокорейской культуре KPOP и  истории и развитии группы Stray Kids. Также в программе нужно предусмотреть возможность прохождения тестирования по изученному материалу с выводом итоговой оценки и реализовать интерактивные приложения.
Исходя из вышеизложенного, программа должна выполнять следующие задачи:
    • иметь интуитивно понятный интерфейс,
    • предоставлять теоретический материал,
    • предоставлять возможность пройти тестирование,
    • предоставлять итоговую оценку за тест.
Обучающая программа должна состоять из набора форм. На основной форме главного меню необходимо разместить кнопки навигации по программе, по нажатию на которые открываются окна:
    • отображение теоретического материала,
    • выбор темы тестирования,
    • отображение информации о программе.
При выборе одного из пунктов главного меню «Теория» должно открываться окно с отображением выбора теоретического материала.
При выборе одного из тестов из главного меню и далее кнопки «Тестирование» должно открываться тестирование.
При выборе пункта главного меню «Инфо» должно открываться окно с отображением информации о программе.

1.3 Описание алгоритма функционирования обучающей программы

Данный программный модуль состоит из четырех блоков:
    • «Главная окно»,
    • «Окно с теоретическим материалом»,
    • «Окно тестирования»,
    • «Окно с информацией о программе»
Обучающая программа «ТЕМА ПРОЕКТА 313» устанавливается на компьютер. Теоретический материал хранится в папке с программой в виде файлов в формате «txt», а практические материалы хранятся в папке с программой в виде файлов в формате «json».

1.4 Обоснование выбора программного обеспечения

Процесс проектирования требует выбора необходимого технического и программного обеспечения.
Процесс курсового проектирования требует выбора необходимого технического и программного обеспечения.
Для проектирования был использован интернет сервис для построения диаграмм «draw.io». Данный сервис имеет ряд преимуществ:
    • возможность проектировать различные виды диаграмм, сохраняя их на облачном хранилище,
    • имеет большое количество шаблонов для проектирования диаграмм.
В качестве языка программирования выбран язык программирования C#, так как он является простым, современным объектно-ориентированным и типобезопасным языком программирования [4]. Для разработки приложения будет использоваться интегрированная среда разработки программ Microsoft Visual Studio 2022 [3], которая имеет следующие преимущества:
    • единая среда разработки независимо от языка программирования или типа приложения,
    • поддержка нескольких языков программирования и различных типов проектов,
    • наличие встроенных средств компиляции и отладки.
Минимальные системные требования для работоспособности обучающей программы «ТЕМА ПРОЕКТА 313»:
    • операционная система Windows 7 и выше,
    • .NET версии 6.0 и выше,
    • процессор с тактовой частотой 1.44 Ггц и выше,
    • оперативная память минимум 20 Мб,
    • объем свободного места на жестком диске не менее 45 Мб.
2 Проектирование и разработка обучающей программы «ТЕМА ПРОЕКТА 313»

2.1 Проектирование причинно-следственной диаграммы

Причинно-следственная диаграмма – инструмент, позволяющий выявить наиболее существенные причины, влияющие на конечный 
результат [2]. На рисунке 1 изображена причинно-следственная диаграмма обучающей программы «ТЕМА ПРОЕКТА 313».



Рисунок 1 – Обучающая программа «ТЕМА ПРОЕКТА 313». Диаграмма причинно-следственная

На данной диаграмме отражено, что обучающая программа имеет два типа данных. Данные разделены на теоретические и практические, субъектом является пользователь.


2.2 Проектирование DFD-диаграмм первого и второго уровня

Для полного описания движения данных внутри программы спроектированы DFD диаграммы первого и второго уровня.
DFD-диаграмма (диаграмма потока данных) – методология графического структурного анализа, описывающая внешние по отношению к системе, источники и адресаты данных, логические функции, потоки данных и хранилища данных, к которым осуществляется доступ [5]. Цель DFD представления – продемонстрировать, как каждый процесс преобразует свои входные данные в выходные, а также выявить отношения между этими процессами.
На рисунке 2 изображена DFD-диаграмма первого уровня обучающей программы «ТЕМА ПРОЕКТА 313».



Рисунок 2 – Обучающая программа «ТЕМА ПРОЕКТА 313». DFD-диаграмма первого уровня

Пользователь выбирает пункт с теорией или тестами. Программа отправляет запрос в хранилище и выводит запрашиваемую информацию пользователю.
На рисунке 3 изображена DFD-диаграмма второго уровня обучающей программы «ТЕМА ПРОЕКТА 313».



Рисунок 3 – Обучающая программа «ТЕМА ПРОЕКТА 313». DFD-диаграмма второго уровня

На данной диаграмме показано, что пользователь взаимодействует с программой через интерфейс, обращаясь к главной форме программы, после чего выбирает доступные ему формы программы. То есть пользователь выбирает теоретический материал или тему тестирования, а программа делает запрос на получение информации из хранилища. Затем пользователь с помощью интерфейса имеет возможность работать с полученным материалом.
2.3 Проектирование UML-диаграмм стереотипов

UML (Unified Modeling Language) – язык графического описания для объектного моделирования в области разработки программного обеспечения, моделирования бизнес-процессов, системного проектирования и отображения организационных структур. Используя UML, разработчики могут создавать диаграммы классов, диаграммы вариантов использования, диаграммы последовательностей и другие виды диаграмм, что помогает им лучше понимать структуру и взаимодействие компонентов программной системы. [6].
UML-диаграммы стереотипов используются для создания новых элементов моделирования, получаемых из существующих, но имеющих определенные свойства, которые подходят для конкретной проблемы предметной области или для другого специализированного использования. UML-диаграммы стереотипов предоставляют разработчикам гибкий механизм для расширения стандартных элементов моделирования и создания специализированных конструкций, соответствующих уникальным требованиям проекта [8].
UML позволяет также разработчикам программного обеспечения достигнуть соглашения в графических обозначениях для представления общих понятий (таких как класс, компонент, обобщение, агрегация и поведение) и больше сконцентрироваться на проектировании и архитектуре. UML обеспечивает стандартизацию процесса разработки ПО и позволяет создавать наглядные диаграммы, которые упрощают взаимодействие между разработчиками и заказчиками. Благодаря использованию UML, разработчики могут легко коммуницировать и обмениваться идеями, используя унифицированный набор символов и обозначений. Более того, UML позволяет эффективно документировать процесс разработки, что упрощает последующую поддержку и сопровождение созданного программного обеспечения. [9].
На рисунке 4 представлена UML-диаграмма стереотипов обучающей программы «ТЕМА ПРОЕКТА 313».


Рисунок 4 – Обучающая программа «ТЕМА ПРОЕКТА 313». UML-диаграмма стереотипов

На данной диаграмме показано, что пользователь с главной формы программы может взаимодействовать со следующими компонентами программы:
    • форма теоретического материала,
    • форма выбора темы тестирования,
    • форма с информацией о программе.
2.4 Проектирование прототипа обучающей программы «ТЕМА ПРОЕКТА 313»

Прототип – модель, прообраз конечного продукта. Прототипы различаются по степени точности и приближенности к реальному
продукту.
Разные виды прототипов служат разным целям и способны решать разные задачи. По стадии готовности их условно делят на три этапа:
    • концептуальные,
    • интерактивные,
    • анимированные.
Для описания прототипа обучающей программы «ТЕМА ПРОЕКТА 313» выбрана концептуальная модель. Концептуальный прототип представляет собой схематичное изображение будущих экранов и создается на ранних этапах разработки продукта. На рисунке 5 представлен концептуальный прототип обучающей программы «ТЕМА ПРОЕКТА 313».



Рисунок 5 – Обучающая программа «ТЕМА ПРОЕКТА 313». Прототип обучающей программы
2.5 Создание обучающей программы «ТЕМА ПРОЕКТА 313»

При разработке обучающей программы создано четыре окна:
    • главное окно,
    • окно с теоретическим материалом,
    • окно тестирования,
    • окно с информацией о программе.
Главное окно программы предназначено, чтобы пользователь мог сразу увидеть, какие функции он может использовать в данной программе. Главное окно обучающей программы «ТЕМА ПРОЕКТА 313» предлагает пользователю выбрать один из интерактивных пунктов меню. Благодаря приятному и интуитивно понятному интерфейсу использование главного окна программы не будет вызывать сложностей даже у тех, кто плохо знаком с тем, как работает компьютер.  Внешний вид данного окна представлен на рисунке 6.
Одна из интерактивных функций главного окна обучающей программы «ТЕМА ПРОЕКТА 313» это выбор теста с помощью элемента ComboBox, название которого соответствует одному из представленных текстов в окне с теоретическим материалом.  После ознакомления с теорией, пользователь может выйти на главное окно, а затем после этого выбрать нужный тест, который соответствует пройденному теоретическому материалу.
ССЫЛКА НА рисунок 7


Рисунок 6 – Обучающая программа «ТЕМА ПРОЕКТА 313». Внешний вид главного окна программы

private void MainForm_Load(object sender, EventArgs e)
{
    var testsName = FleManager.GetTestNames();
    comboBoxTests.Items.AddRange(testsName);
    if (comboBoxTests.Items.Count > 0)
    {
        comboBoxTests.SelectedIndex = 0;
    }
}

Рисунок 7 – Обучающая программа «ТЕМА ПРОЕКТА 313». Часть кода, предлагающего выбрать нужный тест
Окно с теоретическим материалом предназначено для отображения тем теоретического материала. При нажатии на кнопку с названием нужной темы, в RichTextBox отображается теоретический материал, указанный в json файлах. Благодаря простому и понятному интерфейсу пользователь сможет без возникновения каких-либо трудностей использовать предоставленный теоретический материал, переключаясь между интересующими темами. Внешний вид окна с выбором теоретического материала представлен на рисунке 8.
Для проверки существования указанного файла в окне FormTheory был добавлен соответствующий код. Этот код выполняет простую проверку наличия файла по указанному пути. При наличии файла его содержимое будет автоматически отображено в элементе управления RichTextBox. В случае если файла нет, пользователю будет предоставлена информация об ошибке. Таким образом, пользователь будет проинформирован о наличии или отсутствии необходимого файла. Часть кода представлена на рисунке 9.



Рисунок 8 – Обучающая программа «ТЕМА ПРОЕКТА 313». Вид внешнего окна с теоретическим материалом
if (File.Exists(filePath))
{
    string text = File.ReadAllText(filePath);
    richTextBox1.Text = text;
}
else
{
    MessageBox.Show("файл не существует");

Рисунок 9 – Обучающая программа «ТЕМА ПРОЕКТА 313».
Часть кода, проверяющего наличие нужного файла

Окно тестирования предназначено для прохождения тестирования. В окне отображается название текущего теста, номер вопроса, текст вопроса и варианты ответа. В случае, если пользователь не выберет ни одного ответа и попытается перейти к следующему вопросу теста, то программа выведет диалоговое окно с текстом «Выберите хотя бы один вариант ответа». При истечении времени ответ засчитывается ошибочным и происходит переход к следующему вопросу в тесте. По завершению теста выводится итоговая оценка и количество вопросов с верно выбранными вариантами ответа. Внешний вид окна тестирования представлен на рисунке 9.
Для проверки итоговой оценки создан метод «CalculateGrade», производящий расчет в процентном соотношении общего количества ответов и вопросов с неверным ответом. Также после завершения расчета, метод выдает пользователю оценку, которую он получил за прохождения теста. Часть кода метода «CalculateGrade» представлена на рисунке 10.



Рисунок 9 – Обучающая программа «ТЕМА ПРОЕКТА 313». Вид внешней формы «FormTest»

private int CalculateGrade()
{
    int grade;
    if (percentage > 0.75) { grade = 5; }
    else if (percentage > 0.60) { grade = 4; }
    else if (percentage > 0.50) { grade = 3; }
    else { grade = 2; }
    return grade;
}

Рисунок 10 – Обучающая программа «ТЕМА ПРОЕКТА 313». Часть кода метода «CalculateGrade»


Окно, предназначенное для информационных целей, обеспечивает удобный доступ к различным сведениям о программе, её разработчике и другой полезной информации. Это позволяет пользователям быстро и просто получить необходимую информацию о программе. Такая информация может быть полезной как для новых пользователей, так и для тех, кто уже знаком с программой, но хочет углубить свои знания о ней. Внешний вид окна с информацией о программе представлен на рисунке 11.



Рисунок 11 – Обучающая программа «ТЕМА ПРОЕКТА 313». Вид внешний формы «InfoForm»

3 Спецификация программы

Рекомендуемые системные требования для использования электронного учебника «ТЕМА ПРОЕКТА 313»:
    • операционная система Windows 7 и выше,
    • .NET версии 6.0 и выше [10], 
    • процессор с тактовой частотой 1.44 Ггц и выше,
    • оперативная память минимум 30 Мб,
    • объем свободного места на жестком диске не менее 45 Мб.
Исполняемый файл электронного учебника «ТЕМА ПРОЕКТА 313» имеет название Proect.csproj. Помимо исполняемого файла в проект включены файлы, описанные в таблице 1.

Таблица 1 – Описание файлов, входящих в проект
Обозначение	Наименование	Применение
Proect.csproj	Структурированный
файл
Microsoft Visual Studio 2022	Служит для организации проекта, обеспечение обозревателя решений для отображения графического интерфейса
Program.cs	Visual C# Project file	Файл содержит стандартный метод MainForm() и код для автоматического создания экземпляра класса
MainForm.Designer.cs, FormTheory.Designer.cs,  FormTest.Designer.cs, InfoForm.Designer.cs,	Файлы проекта	Содержат код, реализующий визуальное отображение компонентов на форме
MainForm.cs, FormTheory.cs, 
FormTest.cs, InfoForm.cs,	Файлы проекта	Содержат исходный коды для каждой из форм
MainForm.resx, FormTheory.resx,  FormTest.resx, InfoForm.resx	Файлы ресурсов	Содержат информацию об использованных внешних ресурсах
Продолжение таблицы 1
Обозначение	Наименование	Применение
Proect.csproj	Visual C# Project file	Исполняемый файл главного процесса
*.cs	Visual C# Source file	Содержит исходный программный код приложения
*.txt	Текстовый документ	Содержит теоретический материал
*.xml	Расширяемый язык разметки	Содержит тестовый материал

Помимо данных файлов в проекте используются файлы в формате txt, в которых располагается теоретический материал. Для хранения файлов с тестами проекте создаются файлы в формате json.

4 Тестирование обучающей программы «ТЕМА ПРОЕКТА 313»

Функциональное тестирование – это тестирование ПО в целях проверки реализуемости функциональных требований, то есть способности ПО в определённых условиях решать задачи, нужные пользователям. Функциональное тестирование бывает двух видов: тестирование методом «белого ящика» и тестирование методом «черного ящика».
В качестве метода тестирования выбран метод «черного ящика», так как тестирование проводится с позиции конечного пользователя, что помогает выявить неправильно реализованные функции, ошибки интерфейса.
В результате разработки обучающей программы, было проведено полное тестирования программного продукта, результаты которого представлены по каждому модулю в отдельных таблицах 2-5.

Таблица 2 – Тестирование элементов главного окна обучающей программы «ТЕМА ПРОЕКТА 313»
Входные данные	Ожидаемый результат	Результат по программе
Нажатие на кнопку «Теория»	Открытие окна с теоретическим материалом	Открылось окно с теоретическим материалом
Нажатие на кнопку «Тестирование»	Открытие окна с выбором темы тестирования	Открылось окно с выбором темы тестирования
Нажатие на кнопку «Инфо»	Открытие окна с информацией о программе	Открылось окно с информацией о программе
Нажатие на кнопку закрытия	Закрытие программы	Закрытие программы
Нажатие на кнопку «Свернуть»	Сворачивание окна программы в «Панель задач»	Окно программы свернулось в «Панель задач»
Нажатие на кнопку «Развернуть»	Разворачивание окна программы на весь экран	Произошло разворачивание окна программы на весь экран
Продолжение таблицы 2
Входные данные	Ожидаемый результат	Результат по программе
Перемещение окна программы	Перемещение окна программы	Окно программы не переместилось
Изменение размера окна программы	Изменение размера окна программы	Окно программы размеры не изменило

В процессе тестирования элементов главного окна методом «черного ящика» явных ошибок не выявлено, программа функционирует корректно.

Таблица 3 – Тестирование элементов окна с теоретическим материалом обучающей программы «ТЕМА ПРОЕКТА 313»
Входные данные	Ожидаемый результат	Результат по программе
Нажатие на кнопку «Свернуть»	Сворачивание окна программы в «Панель задач»	Окно программы свернулось в «Панель задач»
Нажатие на кнопку «Развернуть»	Разворачивание окна программы на весь экран	Произошло разворачивание окна программы на весь экран
Нажатие на кнопку «Развернуть» при полноэкранном приложении	Восстановление исходного размера окна приложения	Произошло восстановление исходного размера окна приложения
Нажатие на кнопку закрытия	Закрытие программы	Возвращение к главному окну
Перемещение окна программы	Перемещение окна программы	Окно программы переместилось
Смена темы теоретического материала	Смена темы теоретического материала	Тема теоретического материала изменилась
Использование полосы прокрутки	Перемещение содержимого документа с помощью полос прокрутки	Содержимое документа переместилось с помощью полосы прокрутки
Масштабирование содержимого документа	Масштабирование содержимого документа	Произошло масштабирование содержимого документа

Продолжение таблицы 3
Входные данные	Ожидаемый результат	Результат по программе
Изменение размера окна программы	Изменение размера окна программы	Окно программы размеры изменило
Нажатие на кнопку «Вернуться в меню»	Возвращение к главному окну	Произошло возвращение к главному окну

В процессе тестирования элементов окна с теоретическим материалом методом «черного ящика» ошибок не выявлено, программа функционирует корректно.

Таблица 4 – Тестирование элементов окна выбора теста обучающей программы «ТЕМА ПРОЕКТА 313»
Входные данные	Ожидаемый результат	Результат по программе
Нажатие на кнопку «Свернуть»	Сворачивание окна программы в «Панель задач»	Окно программы свернулось в «Панель задач»
Нажатие на кнопку «Развернуть»	Разворачивание окна программы на весь экран	Произошло разворачивание окна программы на весь экран
Нажатие на кнопку закрытия	Произошло возвращение к главному окну	Закрытие программы
Нажатие на кнопку «Развернуть» при полноэкранном приложении	Восстановление исходного размера окна приложения	Произошло восстановление исходного размера окна приложения
Перемещение окна программы	Перемещение окна программы	Окно программы переместилось
Смена темы теста	Смена темы теста	Тема теста изменилась

В процессе тестирования элементов окна с теоретическим материалом методом «черного ящика» ошибок не выявлено, программа функционирует корректно.
Таблица 5 – Тестирование элементов окна прохождения теста обучающей программы «ТЕМА ПРОЕКТА 313»
Входные данные	Ожидаемый результат	Результат по программе
Нажатие на кнопку «Свернуть»	Сворачивание окна программы в «Панель задач»	Окно программы свернулось в «Панель задач»
Нажатие на кнопку закрытия	Закрытие программы	Закрытие программы
Перемещение окна программы	Перемещение окна программы	Окно программы переместилось
Нажатие на кнопку «Следующий вопрос» c выбранным вариантом ответа	Переход к следующему вопросу теста	Переход к следующему вопросу теста
Изменение размера окна программы	Изменение размера окна программы	Окно программы размеры не изменило
Нажатие на кнопку «Следующий вопрос» без выбранного варианта ответа	Переход к следующему вопросу теста	Появление диалогового окна с просьбой выбрать хотя-бы один вариант ответа
Завершение вопроса из-за окончания времени, при условии, что это был последний вопрос	Сообщение с информацией об итоговой оценке за тест	Появление сообщения с информацией об итоговой оценке и числом вопросов с верным ответом.
Нажатие на кнопку «Завершить тестирование» с выбранным вариантом ответа, при условии, что это последний вопрос	Сообщение с информацией об итоговой оценке	Появление сообщения с информацией об итоговой оценке и и числом вопросов с верным ответом.
Завершение вопроса из-за окончания времени	Переход к следующему вопросу	Произошёл переход к следующему вопросу

В процессе тестирования элементов окна прохождения теста методом «черного ящика» явных ошибок не выявлено, программа функционирует корректно.
Таблица 6 – Тестирование элементов окна с информацией о программе обучающей программы «ТЕМА ПРОЕКТА 313»
Входные данные	Ожидаемый результат	Результат по программе
Нажатие на кнопку «Свернуть»	Сворачивание окна программы в «Панель задач»	Окно программы свернулось в «Панель задач»
Нажатие на кнопку закрытия	Закрытие программы	Закрытие программы
Перемещение окна программы	Перемещение окна программы	Окно программы переместилось
Изменение размера окна программы	Изменение размера окна программы	Окно программы размеры не изменило

В процессе тестирования элементов окна с информацией о программе методом «черного ящика» явных ошибок не выявлено, программа функционирует корректно.
5 Руководство пользователя

5.1 Общие сведения

Обучающая программа «ТЕМА ПРОЕКТА 313» предоставляет возможность хранения теоретического материала и тестов для быстрого их просмотра. Программа «ТЕМА ПРОЕКТА 313» дает пользователям возможность самостоятельно изучить теоретический материал, изложенный в понятном пользователям виде. Также, программа предоставляет возможность тестирования на предварительно выбранные темы, которые соответствуют теоретическим материалам. После каждого пройденного теста пользователь получит оценку и сможет проанализировать качество того, как он изучил, данный в теоретической части, материал. 

5.2 Инструкция по работе

Для запуска программы необходимо открыть исполняемый файл «Proect.csproj» из папки расположения обучающей программы или ярлык на рабочем столе.
При запуске обучающей программы открывается главное окно программы.
На главном окне программы располагаются три кнопки для навигации в приложении:
    • «Теория» открывает окно с информацией по разделам теории. Для того чтобы отобразить необходимую теорию, следует в соответствующем разделе нажать на кнопку с желаемой темой.
    • «Тестирование» открывает окно с выбором темы для дальнейшего прохождения тестирования и вводом информации о выбранном тесте. Если нажать на кнопку «Начать тестирование», то запустится тест по выбранной пользователем теме. На экране будет отображен вопрос и варианты ответов. После ответа на вопрос будет переход на следующий вопрос. Вверху окна с помощью элемента ProgressBar показывается оставшееся время для ответа на вопрос. Если время истечет, будет автоматический переход на следующий вопрос, а если вопрос был последним, то произойдёт завершение теста.
    • «Инфо» открывает окно с информацией о программе. В окне информации можно узнать год разработки и имя разработчика. 
Заключение

В ходе выполнения курсового проекта создана обучающая программа «ТЕМА ПРОЕКТА 313».
Целью курсового проекта является разработка обучающей программы «ТЕМА ПРОЕКТА 313», включающего в себя теоретический материал, представленный в удобном и интересном виде, наборы тестов, которые сразу же автоматически будут проверены.
В ходе реализации поставленной цели изучены особенности обучающих программ. Выполнен анализ предметной области, на основании которого подобраны среда разработки, язык программирования и материал для обучающей программы.
Для достижения поставленной цели были решены следующие задачи:
    • выбрана тема обучающей программы,
    • проектирование обучающей программы: определена цель, выбраны методы обучения, разработан учебный план и контент,
    • разработана архитектура программы для ее реализации,
    • написан программный код обучающей программы, включая интерфейс, функциональные модули, управление данными и т. д.,
    • программа протестирована на корректность, производительность и пользовательскую удобство,
    • успешно использована обучающая программа.
Разработанная обучающая программа «ТЕМА ПРОЕКТА 313» обеспечивает удобное отображение теоретического материала, а также предоставляет возможность прохождения составленных тестов. Обучающая программа имеет интуитивно-понятный интерфейс.
В процессе тестирования обучающей программы «ТЕМА ПРОЕКТА 313» методом «Черного ящика» ошибок не выявлено, программа функционирует корректно.
Список использованных источников

    1 Введение в UML от создателей языка / Гради Буч, Джеймс Рамбо, Ивар Якобсон – ДМК пресс, 2015
    2 Рассел, Д. Диаграмма Исикавы / Д. Рассел. – Москва : Bookvika, 2018
    3 Рихтер, Д. CLR via C#. Программирование на платформе Microsoft .NET Framework 4.0 на языке C# / Д. Рихтер. – Москва : Вильямс, 2017
    4 Троелсен, Э. C# и платформа .NET / Э. Троелсен. – Санкт-Петербург : Питер, 2017
    5 Язык графического описания UML [Электронный ресурс] // Режим доступа: http://www.informicus.ru/default.aspx?SECTION=6&i - свободный
    6 C# 10 и .NET 6. Современная кросс-платформенная разработка / Прайс Марк – Санкт-Петербург : Питер, 2023
    7 C#. 10. Справочник Джозеф Албахари /Бен Албахари — Москва: Вильямс, 2020
    8 Getting Started with Visual Studio 2019. Learning and Implementing New Features / Dirk Strauss – Springer Nature, 2019
    9 UML. Основы. 3-е издание / Фаулер Мартин – Санкт-Петербург: Символ-Плюс, 2019
